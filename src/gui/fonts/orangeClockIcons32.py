# Code generated by font_to_py.py.
# Font: SatoshiSymbol.ttf Char set: E
# Cmd: ./font_to_py.py SatoshiSymbol.ttf 32 satoshiSymbol32.py -x -c E
version = '0.33'
def height():
    return 32

def baseline():
    return 32

def max_width():
    return 25

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 63

def max_ch():
    return 69

_font =\
b'\x19\x00\x00\x1c\x00\x00\x00\x1c\x00\x00\x00\x1c\x00\x00\x00\x1c'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x3f\xff\xfe\x00\x3f\xff\xfe\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x3f\xff'\
b'\xfe\x00\x3f\xff\xfe\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x3f\xff\xfe\x00\x3f\xff\xfe\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x1c\x00\x00\x00\x1c\x00\x00\x00\x1c\x00\x00\x00\x1c'\
b'\x00\x00\x19\x00\x00\x1c\x00\x00\x00\x1c\x00\x00\x00\x1c\x00\x00'\
b'\x00\x1c\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x3f\xff\xfe\x00\x3f\xff\xfe\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x3f\xff\xfe\x00\x3f\xff\xfe\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x3f\xff\xfe\x00\x3f\xff\xfe\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x00\x00\x00\x00\x00\x1c\x00\x00\x00\x1c\x00\x00\x00\x1c\x00\x00'\
b'\x00\x1c\x00\x00'

_index =\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x82\x00'\
b'\x04\x01'

_mvfont = memoryview(_font)
_mvi = memoryview(_index)
ifb = lambda l : l[0] | (l[1] << 8)
def get_ch(ch):
    oc = ord(ch)
    ioff = 2 * (oc - 63 + 1) if oc >= 63 and oc <= 69 else 0
    doff = ifb(_mvi[ioff : ])
    width = ifb(_mvfont[doff : ])

    next_offs = doff + 2 + ((width - 1)//8 + 1) * 32
    return _mvfont[doff + 2:next_offs], 32, width
 